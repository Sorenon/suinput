use crate::Vec2D;

#[derive(Debug, Clone, Copy)]
pub enum CursorEvent {
    CursorMove(Vec2D),
}

#[derive(Debug, Clone, Copy)]
pub enum MouseButton {
    Left,
    Middle,
    Right,
    Button4,
    Button5,
}

#[derive(Debug, Clone, Copy)]
pub enum MouseEvent {
    Press(MouseButton),
    Release(MouseButton),
    Scroll(crate::Vec2D),
    Move(crate::Vec2D),
}

#[derive(Debug, Clone, Copy)]
pub enum KeyboardEvent {
    Press(HIDScanCode),
    Release(HIDScanCode),
}


///All physical HID keyboard scan codes according to https://usb.org/sites/default/files/documents/hut1_12v2.pdf
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, num_derive::FromPrimitive)]
pub enum HIDScanCode {
    A = 4,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    N,
    M,
    O,
    P,
    Q,
    R,
    S,
    T,
    U,
    V,
    W,
    X,
    Y,
    Z,
    Key1,
    Key2,
    Key3,
    Key4,
    Key5,
    Key6,
    Key7,
    Key8,
    Key9,
    Key0,
    Enter,
    Escape,
    Backspace,
    Tab,
    Space,
    Minus,
    Equals,
    LeftBracket,
    RightBracket,
    Backslash,
    NonUSHash,
    Semicolon,
    Apostrophe,
    Grave,
    Comma,
    Period,
    ForwardSlash,
    CapsLock,
    F1,
    F2,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    F10,
    F11,
    F12,
    PrintScreen,
    ScrollLock,
    Pause,
    Insert,
    Home,
    PageUp,
    Delete,
    End,
    PageDown,
    Right,
    Left,
    Down,
    Up,
    KeypadNumLock,
    KeypadDivide,
    KeypadMultiply,
    KeypadMinus,
    KeypadPlus,
    KeypadEnter,
    Keypad1,
    Keypad2,
    Keypad3,
    Keypad4,
    Keypad5,
    Keypad6,
    Keypad7,
    Keypad8,
    Keypad9,
    Keypad0,
    KeypadDecimal,
    KeypadNonUSBackslash,
    App,
    KeypadEquals = 103,
    F13,
    F14,
    F15,
    F16,
    F17,
    F18,
    F19,
    F20,
    F21,
    F22,
    F23,
    F24,

    Execute,
    Help,
    Menu,
    Select,
    Stop,
    Again,
    Undo,
    Cut,
    Copy,
    Paste,
    Find,
    Mute,
    VolumeUp,
    VolumeDown,

    LockingCapsLock,
    LockingNumLock,
    LockingScrollLock,

    KeypadComma,
    KeypadEqualSign, //??

    International1,
    International2,
    International3,
    International4,
    International5,
    International6,
    International7,
    International8,
    International9,
    LANG1,
    LANG2,
    LANG3,
    LANG4,
    LANG5,
    LANG6,
    LANG7,
    LANG8,
    LANG9,

    AltErase,
    SysReq,

    Cancel,
    Clear,
    Prior,
    Return,
    Seperator,
    Out,
    Oper,
    ClearAgain,
    CrSel,
    ExSel,

    Keypad00 = 176,
    Keypad000,
    ThousandsSeparator,
    DecimalSeparator,
    CurrencyUnit,
    CurrencySubunit,
    KeypadOpenParentheses,
    KeypadCloseParentheses,
    KeypadOpenBrace,
    KeypadCloseBrace,
    KeypadTab,
    KeypadBackspace,
    KeypadA,
    KeypadB,
    KeypadC,
    KeypadD,
    KeypadE,
    KeypadF,
    KeypadXOR,
    KeypadAccent,
    KeypadPercentage,
    KeypadLessThan,
    KeypadGreaterThan,
    KeypadAmpersand,
    KeypadAND,
    KeypadVerticalBar,
    KeypadOR,
    KeypadColon,
    KeypadHash,
    KeypadSpace,
    KeypadAt,
    KeypadExclamation,
    KeypadMemoryStore,
    KeypadMemoryRecall,
    KeypadMemoryClear,
    KeypadMemoryAdd,
    KeypadMemorySubtract,
    KeypadMemoryMultiply,
    KeypadMemoryDivide,
    KeypadPlusMinus,
    KeypadClear,
    KeypadClearEntry,
    KeypadBinary,
    KeypadOctal,
    KeypadDenary,
    KeypadHexadecimal,

    LeftControl = 224,
    LeftShift,
    LeftAlt,
    LeftGui,
    RightControl,
    RightShift,
    RightAlt,
    RightGui,
}
