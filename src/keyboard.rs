#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum HIDScanCode {
    A = 0x04,
    B = 0x05,
    C = 0x06,
    D = 0x07,
    E = 0x08,
    F = 0x09,
    G = 0x0a,
    H = 0x0b,
    I = 0x0c,
    J = 0x0d,
    K = 0x0e,
    L = 0x0f,
    N = 0x10,
    M = 0x11,
    O = 0x12,
    P = 0x13,
    Q = 0x14,
    R = 0x15,
    S = 0x16,
    T = 0x17,
    U = 0x18,
    V = 0x19,
    W = 0x1a,
    X = 0x1b,
    Y = 0x1c,
    Z = 0x1d,
    Key1 = 0x1e,
    Key2 = 0x1f,
    Key3 = 0x20,
    Key4 = 0x21,
    Key5 = 0x22,
    Key6 = 0x23,
    Key7 = 0x24,
    Key8 = 0x25,
    Key9 = 0x26,
    Key0 = 0x27,
    Enter = 0x28,
    Escape = 0x29,
    Backspace = 0x2a,
    Tab = 0x2b,
    Space = 0x2c,
    Minus = 0x2d,
    Equals = 0x2e,
    LeftBracket = 0x2f,
    RightBracket = 0x30,
    Backslash = 0x31,
    NonUSHash = 0x32,
    Semicolon = 0x33,
    Apostrophe = 0x34,
    Grave = 0x35,
    Comma = 0x36,
    Period = 0x37,
    ForwardSlash = 0x38,
    CapsLock = 0x39,
    F1 = 0x3a,
    F2 = 0x3b,
    F3 = 0x3c,
    F4 = 0x3d,
    F5 = 0x3e,
    F6 = 0x3f,
    F7 = 0x40,
    F8 = 0x41,
    F9 = 0x42,
    F10 = 0x43,
    F11 = 0x44,
    F12 = 0x45,
    PrintScreen = 0x46,
    ScrollLock = 0x47,
    Pause = 0x48,
    Insert = 0x49,
    Home = 0x4a,
    PageUp = 0x4b,
    Delete = 0x4c,
    End = 0x4d,
    PageDown = 0x4e,
    Right = 0x4f,
    Left = 0x50,
    Down = 0x51,
    Up = 0x52,
    KeypadNumLock = 0x53,
    KeypadDivide = 0x54,
    KeypadMultiply = 0x55,
    KeypadMinus = 0x56,
    KeypadPlus = 0x57,
    KeypadEnter = 0x58,
    Keypad1 = 0x59,
    Keypad2 = 0x5a,
    Keypad3 = 0x5b,
    Keypad4 = 0x5c,
    Keypad5 = 0x5d,
    Keypad6 = 0x5e,
    Keypad7 = 0x5f,
    Keypad8 = 0x60,
    Keypad9 = 0x61,
    Keypad0 = 0x62,
    KeypadDecimal = 0x63,
    KeypadNonUSBackslash = 0x64,
    App = 0x65,
    KeypadEquals = 0x67,
    F13 = 0x68,
    F14 = 0x69,
    F15 = 0x6a,
    F16 = 0x6b,
    F17 = 0x6c,
    F18 = 0x6d,
    F19 = 0x6e,
    F20 = 0x6f,
    F21 = 0x70,
    F22 = 0x71,
    F23 = 0x72,
    F24 = 0x73,
    Execute = 0x74,
    Help = 0x75,
    Menu = 0x76,
    Select = 0x77,
    Stop = 0x78,
    Again = 0x79,
    Undo = 0x7a,
    Cut = 0x7b,
    Copy = 0x7c,
    Paste = 0x7d,
    Find = 0x7e,
    Mute = 0x7f,
    VolumeUp = 0x80,
    VolumeDown = 0x81,
    LockingCapsLock = 0x82,
    LockingNumLock = 0x83,
    LockingScrollLock = 0x84,
    KeypadComma = 0x85,
    KeypadEqualSign = 0x86,
    International1 = 0x87,
    International2 = 0x88,
    International3 = 0x89,
    International4 = 0x8a,
    International5 = 0x8b,
    International6 = 0x8c,
    International7 = 0x8d,
    International8 = 0x8e,
    International9 = 0x8f,
    LANG1 = 0x90,
    LANG2 = 0x91,
    LANG3 = 0x92,
    LANG4 = 0x93,
    LANG5 = 0x94,
    LANG6 = 0x95,
    LANG7 = 0x96,
    LANG8 = 0x97,
    LANG9 = 0x98,
    AltErase = 0x99,
    SysReq = 0x9a,
    Cancel = 0x9b,
    Clear = 0x9c,
    Prior = 0x9d,
    Return = 0x9e,
    Separator = 0x9f,
    Out = 0xa0,
    Oper = 0xa1,
    ClearAgain = 0xa2,
    CrSel = 0xa3,
    ExSel = 0xa4,
    Keypad00 = 0xb0,
    Keypad000 = 0xb1,
    ThousandsSeparator = 0xb2,
    DecimalSeparator = 0xb3,
    CurrencyUnit = 0xb4,
    CurrencySubunit = 0xb5,
    KeypadOpenParentheses = 0xb6,
    KeypadCloseParentheses = 0xb7,
    KeypadOpenBrace = 0xb8,
    KeypadCloseBrace = 0xb9,
    KeypadTab = 0xba,
    KeypadBackspace = 0xbb,
    KeypadA = 0xbc,
    KeypadB = 0xbd,
    KeypadC = 0xbe,
    KeypadD = 0xbf,
    KeypadE = 0xc0,
    KeypadF = 0xc1,
    KeypadXOR = 0xc2,
    KeypadAccent = 0xc3,
    KeypadPercentage = 0xc4,
    KeypadLessThan = 0xc5,
    KeypadGreaterThan = 0xc6,
    KeypadAmpersand = 0xc7,
    KeypadAND = 0xc8,
    KeypadVerticalBar = 0xc9,
    KeypadOR = 0xca,
    KeypadColon = 0xcb,
    KeypadHash = 0xcc,
    KeypadSpace = 0xcd,
    KeypadAtSymbol = 0xce,
    KeypadExclamation = 0xcf,
    KeypadMemoryStore = 0xd0,
    KeypadMemoryRecall = 0xd1,
    KeypadMemoryClear = 0xd2,
    KeypadMemoryAdd = 0xd3,
    KeypadMemorySubtract = 0xd4,
    KeypadMemoryMultiply = 0xd5,
    KeypadMemoryDivide = 0xd6,
    KeypadPlusMinus = 0xd7,
    KeypadClear = 0xd8,
    KeypadClearEntry = 0xd9,
    KeypadBinary = 0xda,
    KeypadOctal = 0xdb,
    KeypadDenary = 0xdc,
    KeypadHexadecimal = 0xdd,
    LeftControl = 0xe0,
    LeftShift = 0xe1,
    LeftAlt = 0xe2,
    LeftGui = 0xe3,
    RightControl = 0xe4,
    RightShift = 0xe5,
    RightAlt = 0xe6,
    RightGui = 0xe7,
}

impl HIDScanCode {
    pub fn from_i32(int: i32) -> Option<Self> {
        match int {
            0x04 => Some(Self::A),
            0x05 => Some(Self::B),
            0x06 => Some(Self::C),
            0x07 => Some(Self::D),
            0x08 => Some(Self::E),
            0x09 => Some(Self::F),
            0x0a => Some(Self::G),
            0x0b => Some(Self::H),
            0x0c => Some(Self::I),
            0x0d => Some(Self::J),
            0x0e => Some(Self::K),
            0x0f => Some(Self::L),
            0x10 => Some(Self::N),
            0x11 => Some(Self::M),
            0x12 => Some(Self::O),
            0x13 => Some(Self::P),
            0x14 => Some(Self::Q),
            0x15 => Some(Self::R),
            0x16 => Some(Self::S),
            0x17 => Some(Self::T),
            0x18 => Some(Self::U),
            0x19 => Some(Self::V),
            0x1a => Some(Self::W),
            0x1b => Some(Self::X),
            0x1c => Some(Self::Y),
            0x1d => Some(Self::Z),
            0x1e => Some(Self::Key1),
            0x1f => Some(Self::Key2),
            0x20 => Some(Self::Key3),
            0x21 => Some(Self::Key4),
            0x22 => Some(Self::Key5),
            0x23 => Some(Self::Key6),
            0x24 => Some(Self::Key7),
            0x25 => Some(Self::Key8),
            0x26 => Some(Self::Key9),
            0x27 => Some(Self::Key0),
            0x28 => Some(Self::Enter),
            0x29 => Some(Self::Escape),
            0x2a => Some(Self::Backspace),
            0x2b => Some(Self::Tab),
            0x2c => Some(Self::Space),
            0x2d => Some(Self::Minus),
            0x2e => Some(Self::Equals),
            0x2f => Some(Self::LeftBracket),
            0x30 => Some(Self::RightBracket),
            0x31 => Some(Self::Backslash),
            0x32 => Some(Self::NonUSHash),
            0x33 => Some(Self::Semicolon),
            0x34 => Some(Self::Apostrophe),
            0x35 => Some(Self::Grave),
            0x36 => Some(Self::Comma),
            0x37 => Some(Self::Period),
            0x38 => Some(Self::ForwardSlash),
            0x39 => Some(Self::CapsLock),
            0x3a => Some(Self::F1),
            0x3b => Some(Self::F2),
            0x3c => Some(Self::F3),
            0x3d => Some(Self::F4),
            0x3e => Some(Self::F5),
            0x3f => Some(Self::F6),
            0x40 => Some(Self::F7),
            0x41 => Some(Self::F8),
            0x42 => Some(Self::F9),
            0x43 => Some(Self::F10),
            0x44 => Some(Self::F11),
            0x45 => Some(Self::F12),
            0x46 => Some(Self::PrintScreen),
            0x47 => Some(Self::ScrollLock),
            0x48 => Some(Self::Pause),
            0x49 => Some(Self::Insert),
            0x4a => Some(Self::Home),
            0x4b => Some(Self::PageUp),
            0x4c => Some(Self::Delete),
            0x4d => Some(Self::End),
            0x4e => Some(Self::PageDown),
            0x4f => Some(Self::Right),
            0x50 => Some(Self::Left),
            0x51 => Some(Self::Down),
            0x52 => Some(Self::Up),
            0x53 => Some(Self::KeypadNumLock),
            0x54 => Some(Self::KeypadDivide),
            0x55 => Some(Self::KeypadMultiply),
            0x56 => Some(Self::KeypadMinus),
            0x57 => Some(Self::KeypadPlus),
            0x58 => Some(Self::KeypadEnter),
            0x59 => Some(Self::Keypad1),
            0x5a => Some(Self::Keypad2),
            0x5b => Some(Self::Keypad3),
            0x5c => Some(Self::Keypad4),
            0x5d => Some(Self::Keypad5),
            0x5e => Some(Self::Keypad6),
            0x5f => Some(Self::Keypad7),
            0x60 => Some(Self::Keypad8),
            0x61 => Some(Self::Keypad9),
            0x62 => Some(Self::Keypad0),
            0x63 => Some(Self::KeypadDecimal),
            0x64 => Some(Self::KeypadNonUSBackslash),
            0x65 => Some(Self::App),
            0x67 => Some(Self::KeypadEquals),
            0x68 => Some(Self::F13),
            0x69 => Some(Self::F14),
            0x6a => Some(Self::F15),
            0x6b => Some(Self::F16),
            0x6c => Some(Self::F17),
            0x6d => Some(Self::F18),
            0x6e => Some(Self::F19),
            0x6f => Some(Self::F20),
            0x70 => Some(Self::F21),
            0x71 => Some(Self::F22),
            0x72 => Some(Self::F23),
            0x73 => Some(Self::F24),
            0x74 => Some(Self::Execute),
            0x75 => Some(Self::Help),
            0x76 => Some(Self::Menu),
            0x77 => Some(Self::Select),
            0x78 => Some(Self::Stop),
            0x79 => Some(Self::Again),
            0x7a => Some(Self::Undo),
            0x7b => Some(Self::Cut),
            0x7c => Some(Self::Copy),
            0x7d => Some(Self::Paste),
            0x7e => Some(Self::Find),
            0x7f => Some(Self::Mute),
            0x80 => Some(Self::VolumeUp),
            0x81 => Some(Self::VolumeDown),
            0x82 => Some(Self::LockingCapsLock),
            0x83 => Some(Self::LockingNumLock),
            0x84 => Some(Self::LockingScrollLock),
            0x85 => Some(Self::KeypadComma),
            0x86 => Some(Self::KeypadEqualSign),
            0x87 => Some(Self::International1),
            0x88 => Some(Self::International2),
            0x89 => Some(Self::International3),
            0x8a => Some(Self::International4),
            0x8b => Some(Self::International5),
            0x8c => Some(Self::International6),
            0x8d => Some(Self::International7),
            0x8e => Some(Self::International8),
            0x8f => Some(Self::International9),
            0x90 => Some(Self::LANG1),
            0x91 => Some(Self::LANG2),
            0x92 => Some(Self::LANG3),
            0x93 => Some(Self::LANG4),
            0x94 => Some(Self::LANG5),
            0x95 => Some(Self::LANG6),
            0x96 => Some(Self::LANG7),
            0x97 => Some(Self::LANG8),
            0x98 => Some(Self::LANG9),
            0x99 => Some(Self::AltErase),
            0x9a => Some(Self::SysReq),
            0x9b => Some(Self::Cancel),
            0x9c => Some(Self::Clear),
            0x9d => Some(Self::Prior),
            0x9e => Some(Self::Return),
            0x9f => Some(Self::Separator),
            0xa0 => Some(Self::Out),
            0xa1 => Some(Self::Oper),
            0xa2 => Some(Self::ClearAgain),
            0xa3 => Some(Self::CrSel),
            0xa4 => Some(Self::ExSel),
            0xb0 => Some(Self::Keypad00),
            0xb1 => Some(Self::Keypad000),
            0xb2 => Some(Self::ThousandsSeparator),
            0xb3 => Some(Self::DecimalSeparator),
            0xb4 => Some(Self::CurrencyUnit),
            0xb5 => Some(Self::CurrencySubunit),
            0xb6 => Some(Self::KeypadOpenParentheses),
            0xb7 => Some(Self::KeypadCloseParentheses),
            0xb8 => Some(Self::KeypadOpenBrace),
            0xb9 => Some(Self::KeypadCloseBrace),
            0xba => Some(Self::KeypadTab),
            0xbb => Some(Self::KeypadBackspace),
            0xbc => Some(Self::KeypadA),
            0xbd => Some(Self::KeypadB),
            0xbe => Some(Self::KeypadC),
            0xbf => Some(Self::KeypadD),
            0xc0 => Some(Self::KeypadE),
            0xc1 => Some(Self::KeypadF),
            0xc2 => Some(Self::KeypadXOR),
            0xc3 => Some(Self::KeypadAccent),
            0xc4 => Some(Self::KeypadPercentage),
            0xc5 => Some(Self::KeypadLessThan),
            0xc6 => Some(Self::KeypadGreaterThan),
            0xc7 => Some(Self::KeypadAmpersand),
            0xc8 => Some(Self::KeypadAND),
            0xc9 => Some(Self::KeypadVerticalBar),
            0xca => Some(Self::KeypadOR),
            0xcb => Some(Self::KeypadColon),
            0xcc => Some(Self::KeypadHash),
            0xcd => Some(Self::KeypadSpace),
            0xce => Some(Self::KeypadAtSymbol),
            0xcf => Some(Self::KeypadExclamation),
            0xd0 => Some(Self::KeypadMemoryStore),
            0xd1 => Some(Self::KeypadMemoryRecall),
            0xd2 => Some(Self::KeypadMemoryClear),
            0xd3 => Some(Self::KeypadMemoryAdd),
            0xd4 => Some(Self::KeypadMemorySubtract),
            0xd5 => Some(Self::KeypadMemoryMultiply),
            0xd6 => Some(Self::KeypadMemoryDivide),
            0xd7 => Some(Self::KeypadPlusMinus),
            0xd8 => Some(Self::KeypadClear),
            0xd9 => Some(Self::KeypadClearEntry),
            0xda => Some(Self::KeypadBinary),
            0xdb => Some(Self::KeypadOctal),
            0xdc => Some(Self::KeypadDenary),
            0xdd => Some(Self::KeypadHexadecimal),
            0xe0 => Some(Self::LeftControl),
            0xe1 => Some(Self::LeftShift),
            0xe2 => Some(Self::LeftAlt),
            0xe3 => Some(Self::LeftGui),
            0xe4 => Some(Self::RightControl),
            0xe5 => Some(Self::RightShift),
            0xe6 => Some(Self::RightAlt),
            0xe7 => Some(Self::RightGui),
            _ => None
        }
    }
}

use crate::{Path, event::DriverManager};
pub struct Paths {
    pub a: Path,
    pub b: Path,
    pub c: Path,
    pub d: Path,
    pub e: Path,
    pub f: Path,
    pub g: Path,
    pub h: Path,
    pub i: Path,
    pub j: Path,
    pub k: Path,
    pub l: Path,
    pub n: Path,
    pub m: Path,
    pub o: Path,
    pub p: Path,
    pub q: Path,
    pub r: Path,
    pub s: Path,
    pub t: Path,
    pub u: Path,
    pub v: Path,
    pub w: Path,
    pub x: Path,
    pub y: Path,
    pub z: Path,
    pub key1: Path,
    pub key2: Path,
    pub key3: Path,
    pub key4: Path,
    pub key5: Path,
    pub key6: Path,
    pub key7: Path,
    pub key8: Path,
    pub key9: Path,
    pub key0: Path,
    pub enter: Path,
    pub escape: Path,
    pub backspace: Path,
    pub tab: Path,
    pub space: Path,
    pub minus: Path,
    pub equals: Path,
    pub left_bracket: Path,
    pub right_bracket: Path,
    pub backslash: Path,
    pub non_us_hash: Path,
    pub semicolon: Path,
    pub apostrophe: Path,
    pub grave: Path,
    pub comma: Path,
    pub period: Path,
    pub forward_slash: Path,
    pub caps_lock: Path,
    pub f1: Path,
    pub f2: Path,
    pub f3: Path,
    pub f4: Path,
    pub f5: Path,
    pub f6: Path,
    pub f7: Path,
    pub f8: Path,
    pub f9: Path,
    pub f10: Path,
    pub f11: Path,
    pub f12: Path,
    pub print_screen: Path,
    pub scroll_lock: Path,
    pub pause: Path,
    pub insert: Path,
    pub home: Path,
    pub page_up: Path,
    pub delete: Path,
    pub end: Path,
    pub page_down: Path,
    pub right: Path,
    pub left: Path,
    pub down: Path,
    pub up: Path,
    pub keypad_num_lock: Path,
    pub keypad_divide: Path,
    pub keypad_multiply: Path,
    pub keypad_minus: Path,
    pub keypad_plus: Path,
    pub keypad_enter: Path,
    pub keypad1: Path,
    pub keypad2: Path,
    pub keypad3: Path,
    pub keypad4: Path,
    pub keypad5: Path,
    pub keypad6: Path,
    pub keypad7: Path,
    pub keypad8: Path,
    pub keypad9: Path,
    pub keypad0: Path,
    pub keypad_decimal: Path,
    pub keypad_non_us_backslash: Path,
    pub app: Path,
    pub keypad_equals: Path,
    pub f13: Path,
    pub f14: Path,
    pub f15: Path,
    pub f16: Path,
    pub f17: Path,
    pub f18: Path,
    pub f19: Path,
    pub f20: Path,
    pub f21: Path,
    pub f22: Path,
    pub f23: Path,
    pub f24: Path,
    pub execute: Path,
    pub help: Path,
    pub menu: Path,
    pub select: Path,
    pub stop: Path,
    pub again: Path,
    pub undo: Path,
    pub cut: Path,
    pub copy: Path,
    pub paste: Path,
    pub find: Path,
    pub mute: Path,
    pub volume_up: Path,
    pub volume_down: Path,
    pub locking_caps_lock: Path,
    pub locking_num_lock: Path,
    pub locking_scroll_lock: Path,
    pub keypad_comma: Path,
    pub keypad_equal_sign: Path,
    pub international1: Path,
    pub international2: Path,
    pub international3: Path,
    pub international4: Path,
    pub international5: Path,
    pub international6: Path,
    pub international7: Path,
    pub international8: Path,
    pub international9: Path,
    pub lang1: Path,
    pub lang2: Path,
    pub lang3: Path,
    pub lang4: Path,
    pub lang5: Path,
    pub lang6: Path,
    pub lang7: Path,
    pub lang8: Path,
    pub lang9: Path,
    pub alt_erase: Path,
    pub sys_req: Path,
    pub cancel: Path,
    pub clear: Path,
    pub prior: Path,
    pub r#return: Path,
    pub separator: Path,
    pub out: Path,
    pub oper: Path,
    pub clear_again: Path,
    pub cr_sel: Path,
    pub ex_sel: Path,
    pub keypad00: Path,
    pub keypad000: Path,
    pub thousands_separator: Path,
    pub decimal_separator: Path,
    pub currency_unit: Path,
    pub currency_subunit: Path,
    pub keypad_open_parentheses: Path,
    pub keypad_close_parentheses: Path,
    pub keypad_open_brace: Path,
    pub keypad_close_brace: Path,
    pub keypad_tab: Path,
    pub keypad_backspace: Path,
    pub keypad_a: Path,
    pub keypad_b: Path,
    pub keypad_c: Path,
    pub keypad_d: Path,
    pub keypad_e: Path,
    pub keypad_f: Path,
    pub keypad_xor: Path,
    pub keypad_accent: Path,
    pub keypad_percentage: Path,
    pub keypad_less_than: Path,
    pub keypad_greater_than: Path,
    pub keypad_ampersand: Path,
    pub keypad_and: Path,
    pub keypad_vertical_bar: Path,
    pub keypad_or: Path,
    pub keypad_colon: Path,
    pub keypad_hash: Path,
    pub keypad_space: Path,
    pub keypad_at_symbol: Path,
    pub keypad_exclamation: Path,
    pub keypad_memory_store: Path,
    pub keypad_memory_recall: Path,
    pub keypad_memory_clear: Path,
    pub keypad_memory_add: Path,
    pub keypad_memory_subtract: Path,
    pub keypad_memory_multiply: Path,
    pub keypad_memory_divide: Path,
    pub keypad_plus_minus: Path,
    pub keypad_clear: Path,
    pub keypad_clear_entry: Path,
    pub keypad_binary: Path,
    pub keypad_octal: Path,
    pub keypad_denary: Path,
    pub keypad_hexadecimal: Path,
    pub left_control: Path,
    pub left_shift: Path,
    pub left_alt: Path,
    pub left_gui: Path,
    pub right_control: Path,
    pub right_shift: Path,
    pub right_alt: Path,
    pub right_gui: Path,
}

impl Paths {
    pub fn new(driver_manager: &mut dyn DriverManager) -> Self {
        Self {
            a: driver_manager.get_path("/input/button_a/click"),
            b: driver_manager.get_path("/input/button_b/click"),
            c: driver_manager.get_path("/input/button_c/click"),
            d: driver_manager.get_path("/input/button_d/click"),
            e: driver_manager.get_path("/input/button_e/click"),
            f: driver_manager.get_path("/input/button_f/click"),
            g: driver_manager.get_path("/input/button_g/click"),
            h: driver_manager.get_path("/input/button_h/click"),
            i: driver_manager.get_path("/input/button_i/click"),
            j: driver_manager.get_path("/input/button_j/click"),
            k: driver_manager.get_path("/input/button_k/click"),
            l: driver_manager.get_path("/input/button_l/click"),
            n: driver_manager.get_path("/input/button_n/click"),
            m: driver_manager.get_path("/input/button_m/click"),
            o: driver_manager.get_path("/input/button_o/click"),
            p: driver_manager.get_path("/input/button_p/click"),
            q: driver_manager.get_path("/input/button_q/click"),
            r: driver_manager.get_path("/input/button_r/click"),
            s: driver_manager.get_path("/input/button_s/click"),
            t: driver_manager.get_path("/input/button_t/click"),
            u: driver_manager.get_path("/input/button_u/click"),
            v: driver_manager.get_path("/input/button_v/click"),
            w: driver_manager.get_path("/input/button_w/click"),
            x: driver_manager.get_path("/input/button_x/click"),
            y: driver_manager.get_path("/input/button_y/click"),
            z: driver_manager.get_path("/input/button_z/click"),
            key1: driver_manager.get_path("/input/button_key1/click"),
            key2: driver_manager.get_path("/input/button_key2/click"),
            key3: driver_manager.get_path("/input/button_key3/click"),
            key4: driver_manager.get_path("/input/button_key4/click"),
            key5: driver_manager.get_path("/input/button_key5/click"),
            key6: driver_manager.get_path("/input/button_key6/click"),
            key7: driver_manager.get_path("/input/button_key7/click"),
            key8: driver_manager.get_path("/input/button_key8/click"),
            key9: driver_manager.get_path("/input/button_key9/click"),
            key0: driver_manager.get_path("/input/button_key0/click"),
            enter: driver_manager.get_path("/input/button_enter/click"),
            escape: driver_manager.get_path("/input/button_escape/click"),
            backspace: driver_manager.get_path("/input/button_backspace/click"),
            tab: driver_manager.get_path("/input/button_tab/click"),
            space: driver_manager.get_path("/input/button_space/click"),
            minus: driver_manager.get_path("/input/button_minus/click"),
            equals: driver_manager.get_path("/input/button_equals/click"),
            left_bracket: driver_manager.get_path("/input/button_left_bracket/click"),
            right_bracket: driver_manager.get_path("/input/button_right_bracket/click"),
            backslash: driver_manager.get_path("/input/button_backslash/click"),
            non_us_hash: driver_manager.get_path("/input/button_non_us_hash/click"),
            semicolon: driver_manager.get_path("/input/button_semicolon/click"),
            apostrophe: driver_manager.get_path("/input/button_apostrophe/click"),
            grave: driver_manager.get_path("/input/button_grave/click"),
            comma: driver_manager.get_path("/input/button_comma/click"),
            period: driver_manager.get_path("/input/button_period/click"),
            forward_slash: driver_manager.get_path("/input/button_forward_slash/click"),
            caps_lock: driver_manager.get_path("/input/button_caps_lock/click"),
            f1: driver_manager.get_path("/input/button_f1/click"),
            f2: driver_manager.get_path("/input/button_f2/click"),
            f3: driver_manager.get_path("/input/button_f3/click"),
            f4: driver_manager.get_path("/input/button_f4/click"),
            f5: driver_manager.get_path("/input/button_f5/click"),
            f6: driver_manager.get_path("/input/button_f6/click"),
            f7: driver_manager.get_path("/input/button_f7/click"),
            f8: driver_manager.get_path("/input/button_f8/click"),
            f9: driver_manager.get_path("/input/button_f9/click"),
            f10: driver_manager.get_path("/input/button_f10/click"),
            f11: driver_manager.get_path("/input/button_f11/click"),
            f12: driver_manager.get_path("/input/button_f12/click"),
            print_screen: driver_manager.get_path("/input/button_print_screen/click"),
            scroll_lock: driver_manager.get_path("/input/button_scroll_lock/click"),
            pause: driver_manager.get_path("/input/button_pause/click"),
            insert: driver_manager.get_path("/input/button_insert/click"),
            home: driver_manager.get_path("/input/button_home/click"),
            page_up: driver_manager.get_path("/input/button_page_up/click"),
            delete: driver_manager.get_path("/input/button_delete/click"),
            end: driver_manager.get_path("/input/button_end/click"),
            page_down: driver_manager.get_path("/input/button_page_down/click"),
            right: driver_manager.get_path("/input/button_right/click"),
            left: driver_manager.get_path("/input/button_left/click"),
            down: driver_manager.get_path("/input/button_down/click"),
            up: driver_manager.get_path("/input/button_up/click"),
            keypad_num_lock: driver_manager.get_path("/input/button_keypad_num_lock/click"),
            keypad_divide: driver_manager.get_path("/input/button_keypad_divide/click"),
            keypad_multiply: driver_manager.get_path("/input/button_keypad_multiply/click"),
            keypad_minus: driver_manager.get_path("/input/button_keypad_minus/click"),
            keypad_plus: driver_manager.get_path("/input/button_keypad_plus/click"),
            keypad_enter: driver_manager.get_path("/input/button_keypad_enter/click"),
            keypad1: driver_manager.get_path("/input/button_keypad1/click"),
            keypad2: driver_manager.get_path("/input/button_keypad2/click"),
            keypad3: driver_manager.get_path("/input/button_keypad3/click"),
            keypad4: driver_manager.get_path("/input/button_keypad4/click"),
            keypad5: driver_manager.get_path("/input/button_keypad5/click"),
            keypad6: driver_manager.get_path("/input/button_keypad6/click"),
            keypad7: driver_manager.get_path("/input/button_keypad7/click"),
            keypad8: driver_manager.get_path("/input/button_keypad8/click"),
            keypad9: driver_manager.get_path("/input/button_keypad9/click"),
            keypad0: driver_manager.get_path("/input/button_keypad0/click"),
            keypad_decimal: driver_manager.get_path("/input/button_keypad_decimal/click"),
            keypad_non_us_backslash: driver_manager.get_path("/input/button_keypad_non_us_backslash/click"),
            app: driver_manager.get_path("/input/button_app/click"),
            keypad_equals: driver_manager.get_path("/input/button_keypad_equals/click"),
            f13: driver_manager.get_path("/input/button_f13/click"),
            f14: driver_manager.get_path("/input/button_f14/click"),
            f15: driver_manager.get_path("/input/button_f15/click"),
            f16: driver_manager.get_path("/input/button_f16/click"),
            f17: driver_manager.get_path("/input/button_f17/click"),
            f18: driver_manager.get_path("/input/button_f18/click"),
            f19: driver_manager.get_path("/input/button_f19/click"),
            f20: driver_manager.get_path("/input/button_f20/click"),
            f21: driver_manager.get_path("/input/button_f21/click"),
            f22: driver_manager.get_path("/input/button_f22/click"),
            f23: driver_manager.get_path("/input/button_f23/click"),
            f24: driver_manager.get_path("/input/button_f24/click"),
            execute: driver_manager.get_path("/input/button_execute/click"),
            help: driver_manager.get_path("/input/button_help/click"),
            menu: driver_manager.get_path("/input/button_menu/click"),
            select: driver_manager.get_path("/input/button_select/click"),
            stop: driver_manager.get_path("/input/button_stop/click"),
            again: driver_manager.get_path("/input/button_again/click"),
            undo: driver_manager.get_path("/input/button_undo/click"),
            cut: driver_manager.get_path("/input/button_cut/click"),
            copy: driver_manager.get_path("/input/button_copy/click"),
            paste: driver_manager.get_path("/input/button_paste/click"),
            find: driver_manager.get_path("/input/button_find/click"),
            mute: driver_manager.get_path("/input/button_mute/click"),
            volume_up: driver_manager.get_path("/input/button_volume_up/click"),
            volume_down: driver_manager.get_path("/input/button_volume_down/click"),
            locking_caps_lock: driver_manager.get_path("/input/button_locking_caps_lock/click"),
            locking_num_lock: driver_manager.get_path("/input/button_locking_num_lock/click"),
            locking_scroll_lock: driver_manager.get_path("/input/button_locking_scroll_lock/click"),
            keypad_comma: driver_manager.get_path("/input/button_keypad_comma/click"),
            keypad_equal_sign: driver_manager.get_path("/input/button_keypad_equal_sign/click"),
            international1: driver_manager.get_path("/input/button_international1/click"),
            international2: driver_manager.get_path("/input/button_international2/click"),
            international3: driver_manager.get_path("/input/button_international3/click"),
            international4: driver_manager.get_path("/input/button_international4/click"),
            international5: driver_manager.get_path("/input/button_international5/click"),
            international6: driver_manager.get_path("/input/button_international6/click"),
            international7: driver_manager.get_path("/input/button_international7/click"),
            international8: driver_manager.get_path("/input/button_international8/click"),
            international9: driver_manager.get_path("/input/button_international9/click"),
            lang1: driver_manager.get_path("/input/button_lang1/click"),
            lang2: driver_manager.get_path("/input/button_lang2/click"),
            lang3: driver_manager.get_path("/input/button_lang3/click"),
            lang4: driver_manager.get_path("/input/button_lang4/click"),
            lang5: driver_manager.get_path("/input/button_lang5/click"),
            lang6: driver_manager.get_path("/input/button_lang6/click"),
            lang7: driver_manager.get_path("/input/button_lang7/click"),
            lang8: driver_manager.get_path("/input/button_lang8/click"),
            lang9: driver_manager.get_path("/input/button_lang9/click"),
            alt_erase: driver_manager.get_path("/input/button_alt_erase/click"),
            sys_req: driver_manager.get_path("/input/button_sys_req/click"),
            cancel: driver_manager.get_path("/input/button_cancel/click"),
            clear: driver_manager.get_path("/input/button_clear/click"),
            prior: driver_manager.get_path("/input/button_prior/click"),
            r#return: driver_manager.get_path("/input/button_return/click"),
            separator: driver_manager.get_path("/input/button_separator/click"),
            out: driver_manager.get_path("/input/button_out/click"),
            oper: driver_manager.get_path("/input/button_oper/click"),
            clear_again: driver_manager.get_path("/input/button_clear_again/click"),
            cr_sel: driver_manager.get_path("/input/button_cr_sel/click"),
            ex_sel: driver_manager.get_path("/input/button_ex_sel/click"),
            keypad00: driver_manager.get_path("/input/button_keypad00/click"),
            keypad000: driver_manager.get_path("/input/button_keypad000/click"),
            thousands_separator: driver_manager.get_path("/input/button_thousands_separator/click"),
            decimal_separator: driver_manager.get_path("/input/button_decimal_separator/click"),
            currency_unit: driver_manager.get_path("/input/button_currency_unit/click"),
            currency_subunit: driver_manager.get_path("/input/button_currency_subunit/click"),
            keypad_open_parentheses: driver_manager.get_path("/input/button_keypad_open_parentheses/click"),
            keypad_close_parentheses: driver_manager.get_path("/input/button_keypad_close_parentheses/click"),
            keypad_open_brace: driver_manager.get_path("/input/button_keypad_open_brace/click"),
            keypad_close_brace: driver_manager.get_path("/input/button_keypad_close_brace/click"),
            keypad_tab: driver_manager.get_path("/input/button_keypad_tab/click"),
            keypad_backspace: driver_manager.get_path("/input/button_keypad_backspace/click"),
            keypad_a: driver_manager.get_path("/input/button_keypad_a/click"),
            keypad_b: driver_manager.get_path("/input/button_keypad_b/click"),
            keypad_c: driver_manager.get_path("/input/button_keypad_c/click"),
            keypad_d: driver_manager.get_path("/input/button_keypad_d/click"),
            keypad_e: driver_manager.get_path("/input/button_keypad_e/click"),
            keypad_f: driver_manager.get_path("/input/button_keypad_f/click"),
            keypad_xor: driver_manager.get_path("/input/button_keypad_xor/click"),
            keypad_accent: driver_manager.get_path("/input/button_keypad_accent/click"),
            keypad_percentage: driver_manager.get_path("/input/button_keypad_percentage/click"),
            keypad_less_than: driver_manager.get_path("/input/button_keypad_less_than/click"),
            keypad_greater_than: driver_manager.get_path("/input/button_keypad_greater_than/click"),
            keypad_ampersand: driver_manager.get_path("/input/button_keypad_ampersand/click"),
            keypad_and: driver_manager.get_path("/input/button_keypad_and/click"),
            keypad_vertical_bar: driver_manager.get_path("/input/button_keypad_vertical_bar/click"),
            keypad_or: driver_manager.get_path("/input/button_keypad_or/click"),
            keypad_colon: driver_manager.get_path("/input/button_keypad_colon/click"),
            keypad_hash: driver_manager.get_path("/input/button_keypad_hash/click"),
            keypad_space: driver_manager.get_path("/input/button_keypad_space/click"),
            keypad_at_symbol: driver_manager.get_path("/input/button_keypad_at_symbol/click"),
            keypad_exclamation: driver_manager.get_path("/input/button_keypad_exclamation/click"),
            keypad_memory_store: driver_manager.get_path("/input/button_keypad_memory_store/click"),
            keypad_memory_recall: driver_manager.get_path("/input/button_keypad_memory_recall/click"),
            keypad_memory_clear: driver_manager.get_path("/input/button_keypad_memory_clear/click"),
            keypad_memory_add: driver_manager.get_path("/input/button_keypad_memory_add/click"),
            keypad_memory_subtract: driver_manager.get_path("/input/button_keypad_memory_subtract/click"),
            keypad_memory_multiply: driver_manager.get_path("/input/button_keypad_memory_multiply/click"),
            keypad_memory_divide: driver_manager.get_path("/input/button_keypad_memory_divide/click"),
            keypad_plus_minus: driver_manager.get_path("/input/button_keypad_plus_minus/click"),
            keypad_clear: driver_manager.get_path("/input/button_keypad_clear/click"),
            keypad_clear_entry: driver_manager.get_path("/input/button_keypad_clear_entry/click"),
            keypad_binary: driver_manager.get_path("/input/button_keypad_binary/click"),
            keypad_octal: driver_manager.get_path("/input/button_keypad_octal/click"),
            keypad_denary: driver_manager.get_path("/input/button_keypad_denary/click"),
            keypad_hexadecimal: driver_manager.get_path("/input/button_keypad_hexadecimal/click"),
            left_control: driver_manager.get_path("/input/button_left_control/click"),
            left_shift: driver_manager.get_path("/input/button_left_shift/click"),
            left_alt: driver_manager.get_path("/input/button_left_alt/click"),
            left_gui: driver_manager.get_path("/input/button_left_gui/click"),
            right_control: driver_manager.get_path("/input/button_right_control/click"),
            right_shift: driver_manager.get_path("/input/button_right_shift/click"),
            right_alt: driver_manager.get_path("/input/button_right_alt/click"),
            right_gui: driver_manager.get_path("/input/button_right_gui/click"),
        }
    }


    pub fn get(&self, hid_scan_code: HIDScanCode) -> Path {
        match hid_scan_code {
            HIDScanCode::A => self.a,
            HIDScanCode::B => self.b,
            HIDScanCode::C => self.c,
            HIDScanCode::D => self.d,
            HIDScanCode::E => self.e,
            HIDScanCode::F => self.f,
            HIDScanCode::G => self.g,
            HIDScanCode::H => self.h,
            HIDScanCode::I => self.i,
            HIDScanCode::J => self.j,
            HIDScanCode::K => self.k,
            HIDScanCode::L => self.l,
            HIDScanCode::N => self.n,
            HIDScanCode::M => self.m,
            HIDScanCode::O => self.o,
            HIDScanCode::P => self.p,
            HIDScanCode::Q => self.q,
            HIDScanCode::R => self.r,
            HIDScanCode::S => self.s,
            HIDScanCode::T => self.t,
            HIDScanCode::U => self.u,
            HIDScanCode::V => self.v,
            HIDScanCode::W => self.w,
            HIDScanCode::X => self.x,
            HIDScanCode::Y => self.y,
            HIDScanCode::Z => self.z,
            HIDScanCode::Key1 => self.key1,
            HIDScanCode::Key2 => self.key2,
            HIDScanCode::Key3 => self.key3,
            HIDScanCode::Key4 => self.key4,
            HIDScanCode::Key5 => self.key5,
            HIDScanCode::Key6 => self.key6,
            HIDScanCode::Key7 => self.key7,
            HIDScanCode::Key8 => self.key8,
            HIDScanCode::Key9 => self.key9,
            HIDScanCode::Key0 => self.key0,
            HIDScanCode::Enter => self.enter,
            HIDScanCode::Escape => self.escape,
            HIDScanCode::Backspace => self.backspace,
            HIDScanCode::Tab => self.tab,
            HIDScanCode::Space => self.space,
            HIDScanCode::Minus => self.minus,
            HIDScanCode::Equals => self.equals,
            HIDScanCode::LeftBracket => self.left_bracket,
            HIDScanCode::RightBracket => self.right_bracket,
            HIDScanCode::Backslash => self.backslash,
            HIDScanCode::NonUSHash => self.non_us_hash,
            HIDScanCode::Semicolon => self.semicolon,
            HIDScanCode::Apostrophe => self.apostrophe,
            HIDScanCode::Grave => self.grave,
            HIDScanCode::Comma => self.comma,
            HIDScanCode::Period => self.period,
            HIDScanCode::ForwardSlash => self.forward_slash,
            HIDScanCode::CapsLock => self.caps_lock,
            HIDScanCode::F1 => self.f1,
            HIDScanCode::F2 => self.f2,
            HIDScanCode::F3 => self.f3,
            HIDScanCode::F4 => self.f4,
            HIDScanCode::F5 => self.f5,
            HIDScanCode::F6 => self.f6,
            HIDScanCode::F7 => self.f7,
            HIDScanCode::F8 => self.f8,
            HIDScanCode::F9 => self.f9,
            HIDScanCode::F10 => self.f10,
            HIDScanCode::F11 => self.f11,
            HIDScanCode::F12 => self.f12,
            HIDScanCode::PrintScreen => self.print_screen,
            HIDScanCode::ScrollLock => self.scroll_lock,
            HIDScanCode::Pause => self.pause,
            HIDScanCode::Insert => self.insert,
            HIDScanCode::Home => self.home,
            HIDScanCode::PageUp => self.page_up,
            HIDScanCode::Delete => self.delete,
            HIDScanCode::End => self.end,
            HIDScanCode::PageDown => self.page_down,
            HIDScanCode::Right => self.right,
            HIDScanCode::Left => self.left,
            HIDScanCode::Down => self.down,
            HIDScanCode::Up => self.up,
            HIDScanCode::KeypadNumLock => self.keypad_num_lock,
            HIDScanCode::KeypadDivide => self.keypad_divide,
            HIDScanCode::KeypadMultiply => self.keypad_multiply,
            HIDScanCode::KeypadMinus => self.keypad_minus,
            HIDScanCode::KeypadPlus => self.keypad_plus,
            HIDScanCode::KeypadEnter => self.keypad_enter,
            HIDScanCode::Keypad1 => self.keypad1,
            HIDScanCode::Keypad2 => self.keypad2,
            HIDScanCode::Keypad3 => self.keypad3,
            HIDScanCode::Keypad4 => self.keypad4,
            HIDScanCode::Keypad5 => self.keypad5,
            HIDScanCode::Keypad6 => self.keypad6,
            HIDScanCode::Keypad7 => self.keypad7,
            HIDScanCode::Keypad8 => self.keypad8,
            HIDScanCode::Keypad9 => self.keypad9,
            HIDScanCode::Keypad0 => self.keypad0,
            HIDScanCode::KeypadDecimal => self.keypad_decimal,
            HIDScanCode::KeypadNonUSBackslash => self.keypad_non_us_backslash,
            HIDScanCode::App => self.app,
            HIDScanCode::KeypadEquals => self.keypad_equals,
            HIDScanCode::F13 => self.f13,
            HIDScanCode::F14 => self.f14,
            HIDScanCode::F15 => self.f15,
            HIDScanCode::F16 => self.f16,
            HIDScanCode::F17 => self.f17,
            HIDScanCode::F18 => self.f18,
            HIDScanCode::F19 => self.f19,
            HIDScanCode::F20 => self.f20,
            HIDScanCode::F21 => self.f21,
            HIDScanCode::F22 => self.f22,
            HIDScanCode::F23 => self.f23,
            HIDScanCode::F24 => self.f24,
            HIDScanCode::Execute => self.execute,
            HIDScanCode::Help => self.help,
            HIDScanCode::Menu => self.menu,
            HIDScanCode::Select => self.select,
            HIDScanCode::Stop => self.stop,
            HIDScanCode::Again => self.again,
            HIDScanCode::Undo => self.undo,
            HIDScanCode::Cut => self.cut,
            HIDScanCode::Copy => self.copy,
            HIDScanCode::Paste => self.paste,
            HIDScanCode::Find => self.find,
            HIDScanCode::Mute => self.mute,
            HIDScanCode::VolumeUp => self.volume_up,
            HIDScanCode::VolumeDown => self.volume_down,
            HIDScanCode::LockingCapsLock => self.locking_caps_lock,
            HIDScanCode::LockingNumLock => self.locking_num_lock,
            HIDScanCode::LockingScrollLock => self.locking_scroll_lock,
            HIDScanCode::KeypadComma => self.keypad_comma,
            HIDScanCode::KeypadEqualSign => self.keypad_equal_sign,
            HIDScanCode::International1 => self.international1,
            HIDScanCode::International2 => self.international2,
            HIDScanCode::International3 => self.international3,
            HIDScanCode::International4 => self.international4,
            HIDScanCode::International5 => self.international5,
            HIDScanCode::International6 => self.international6,
            HIDScanCode::International7 => self.international7,
            HIDScanCode::International8 => self.international8,
            HIDScanCode::International9 => self.international9,
            HIDScanCode::LANG1 => self.lang1,
            HIDScanCode::LANG2 => self.lang2,
            HIDScanCode::LANG3 => self.lang3,
            HIDScanCode::LANG4 => self.lang4,
            HIDScanCode::LANG5 => self.lang5,
            HIDScanCode::LANG6 => self.lang6,
            HIDScanCode::LANG7 => self.lang7,
            HIDScanCode::LANG8 => self.lang8,
            HIDScanCode::LANG9 => self.lang9,
            HIDScanCode::AltErase => self.alt_erase,
            HIDScanCode::SysReq => self.sys_req,
            HIDScanCode::Cancel => self.cancel,
            HIDScanCode::Clear => self.clear,
            HIDScanCode::Prior => self.prior,
            HIDScanCode::Return => self.r#return,
            HIDScanCode::Separator => self.separator,
            HIDScanCode::Out => self.out,
            HIDScanCode::Oper => self.oper,
            HIDScanCode::ClearAgain => self.clear_again,
            HIDScanCode::CrSel => self.cr_sel,
            HIDScanCode::ExSel => self.ex_sel,
            HIDScanCode::Keypad00 => self.keypad00,
            HIDScanCode::Keypad000 => self.keypad000,
            HIDScanCode::ThousandsSeparator => self.thousands_separator,
            HIDScanCode::DecimalSeparator => self.decimal_separator,
            HIDScanCode::CurrencyUnit => self.currency_unit,
            HIDScanCode::CurrencySubunit => self.currency_subunit,
            HIDScanCode::KeypadOpenParentheses => self.keypad_open_parentheses,
            HIDScanCode::KeypadCloseParentheses => self.keypad_close_parentheses,
            HIDScanCode::KeypadOpenBrace => self.keypad_open_brace,
            HIDScanCode::KeypadCloseBrace => self.keypad_close_brace,
            HIDScanCode::KeypadTab => self.keypad_tab,
            HIDScanCode::KeypadBackspace => self.keypad_backspace,
            HIDScanCode::KeypadA => self.keypad_a,
            HIDScanCode::KeypadB => self.keypad_b,
            HIDScanCode::KeypadC => self.keypad_c,
            HIDScanCode::KeypadD => self.keypad_d,
            HIDScanCode::KeypadE => self.keypad_e,
            HIDScanCode::KeypadF => self.keypad_f,
            HIDScanCode::KeypadXOR => self.keypad_xor,
            HIDScanCode::KeypadAccent => self.keypad_accent,
            HIDScanCode::KeypadPercentage => self.keypad_percentage,
            HIDScanCode::KeypadLessThan => self.keypad_less_than,
            HIDScanCode::KeypadGreaterThan => self.keypad_greater_than,
            HIDScanCode::KeypadAmpersand => self.keypad_ampersand,
            HIDScanCode::KeypadAND => self.keypad_and,
            HIDScanCode::KeypadVerticalBar => self.keypad_vertical_bar,
            HIDScanCode::KeypadOR => self.keypad_or,
            HIDScanCode::KeypadColon => self.keypad_colon,
            HIDScanCode::KeypadHash => self.keypad_hash,
            HIDScanCode::KeypadSpace => self.keypad_space,
            HIDScanCode::KeypadAtSymbol => self.keypad_at_symbol,
            HIDScanCode::KeypadExclamation => self.keypad_exclamation,
            HIDScanCode::KeypadMemoryStore => self.keypad_memory_store,
            HIDScanCode::KeypadMemoryRecall => self.keypad_memory_recall,
            HIDScanCode::KeypadMemoryClear => self.keypad_memory_clear,
            HIDScanCode::KeypadMemoryAdd => self.keypad_memory_add,
            HIDScanCode::KeypadMemorySubtract => self.keypad_memory_subtract,
            HIDScanCode::KeypadMemoryMultiply => self.keypad_memory_multiply,
            HIDScanCode::KeypadMemoryDivide => self.keypad_memory_divide,
            HIDScanCode::KeypadPlusMinus => self.keypad_plus_minus,
            HIDScanCode::KeypadClear => self.keypad_clear,
            HIDScanCode::KeypadClearEntry => self.keypad_clear_entry,
            HIDScanCode::KeypadBinary => self.keypad_binary,
            HIDScanCode::KeypadOctal => self.keypad_octal,
            HIDScanCode::KeypadDenary => self.keypad_denary,
            HIDScanCode::KeypadHexadecimal => self.keypad_hexadecimal,
            HIDScanCode::LeftControl => self.left_control,
            HIDScanCode::LeftShift => self.left_shift,
            HIDScanCode::LeftAlt => self.left_alt,
            HIDScanCode::LeftGui => self.left_gui,
            HIDScanCode::RightControl => self.right_control,
            HIDScanCode::RightShift => self.right_shift,
            HIDScanCode::RightAlt => self.right_alt,
            HIDScanCode::RightGui => self.right_gui,
        }
    }
}

